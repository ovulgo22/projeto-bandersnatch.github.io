/*
    PROJETO: Documenta√ß√£o de Cargos em Desenvolvimento Web
    ARQUIVO: script.js
    VERS√ÉO: 1.0
    DATA: 03/09/2025
    DESCRI√á√ÉO: Script para funcionalidades interativas do site, como a altern√¢ncia de tema.
               O c√≥digo √© escrito com foco em performance, acessibilidade e experi√™ncia do usu√°rio.
*/

// QA & Front-End: Envolvemos todo o c√≥digo em um evento 'DOMContentLoaded'.
// Isso garante que o script s√≥ execute ap√≥s o HTML ser completamente carregado e analisado,
// evitando erros de "elemento n√£o encontrado". √â uma pr√°tica de programa√ß√£o defensiva.
document.addEventListener('DOMContentLoaded', () => {

    // --- M√ìDULO DE ALTERN√ÇNCIA DE TEMA ---

    // 1. SELE√á√ÉO DOS ELEMENTOS DO DOM
    // Selecionamos os elementos com os quais vamos interagir.
    const themeToggleButton = document.getElementById('theme-toggle');
    const htmlElement = document.documentElement; // Acessa a tag <html>

    // QA: Verifica√ß√£o para garantir que o bot√£o existe na p√°gina antes de tentar adicionar um evento.
    // Se, por algum motivo, o bot√£o for removido do HTML, o script n√£o quebrar√°.
    if (!themeToggleButton) {
        console.warn('Bot√£o de altern√¢ncia de tema n√£o encontrado no DOM.');
        return; // Encerra a execu√ß√£o deste m√≥dulo se o bot√£o n√£o existir.
    }

    // 2. CONSTANTES E √çCONES
    // Creative Dev: Usar emojis ou SVGs como √≠cones √© uma forma leve de adicionar apelo visual.
    const ICONS = {
        light: '‚òÄÔ∏è', // Sol para tema claro
        dark: 'üåô'  // Lua para tema escuro
    };

    // 3. FUN√á√ÉO PRINCIPAL PARA APLICAR O TEMA
    /**
     * Aplica um tema (claro ou escuro) ao site, atualizando a classe do HTML,
     * o √≠cone do bot√£o, o aria-label para acessibilidade e salvando a prefer√™ncia.
     * @param {string} theme - O tema a ser aplicado ('light' or 'dark').
     */
    const applyTheme = (theme) => {
        // Front-End: Adiciona ou remove a classe que ativa as vari√°veis CSS do tema escuro.
        htmlElement.classList.toggle('dark-theme', theme === 'dark');

        // A11y: Atualiza o aria-label para que leitores de tela informem a a√ß√£o correta do bot√£o.
        const newLabel = `Alternar para tema ${theme === 'dark' ? 'claro' : 'escuro'}`;
        themeToggleButton.setAttribute('aria-label', newLabel);

        // UI/UX: Atualiza o √≠cone do bot√£o para refletir o estado atual.
        themeToggleButton.innerHTML = theme === 'dark' ? ICONS.light : ICONS.dark;

        // UX: Salva a escolha do usu√°rio no localStorage para persist√™ncia entre visitas.
        localStorage.setItem('theme', theme);
    };

    // 4. L√ìGICA DE INICIALIZA√á√ÉO DO TEMA
    // UX: Esta √© a l√≥gica "inteligente". Ela decide qual tema carregar na primeira visita.
    // A prioridade √©:
    // 1. Prefer√™ncia salva pelo usu√°rio (localStorage).
    // 2. Prefer√™ncia do sistema operacional do usu√°rio (prefers-color-scheme).
    // 3. Padr√£o: tema claro.
    const savedTheme = localStorage.getItem('theme');
    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

    // Determina o tema inicial com base na hierarquia de prioridades.
    const initialTheme = savedTheme || (systemPrefersDark ? 'dark' : 'light');
    
    // Aplica o tema determinado assim que o script carrega.
    applyTheme(initialTheme);


    // 5. EVENT LISTENER PARA O CLIQUE
    // Adiciona o evento de clique ao bot√£o para permitir a altern√¢ncia manual.
    themeToggleButton.addEventListener('click', () => {
        // Verifica qual √© o tema atual checando a presen√ßa da classe '.dark-theme'.
        const currentTheme = htmlElement.classList.contains('dark-theme') ? 'dark' : 'light';
        
        // Calcula o novo tema. Se o atual for 'dark', o novo ser√° 'light', e vice-versa.
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

        // Aplica o novo tema.
        applyTheme(newTheme);
    });

    // --- OUTROS M√ìDULOS PODEM SER ADICIONADOS AQUI NO FUTURO ---
    // Ex: Funcionalidade de busca, anima√ß√µes de scroll, etc.

});
